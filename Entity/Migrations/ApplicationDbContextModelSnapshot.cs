// <auto-generated />
using System;
using Entity.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Model.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasDefaultValue("Pendiente")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime>("FechaCita")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("FECHA_CITA");

                    b.Property<DateTime?>("FechaCompletada")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("FECHA_COMPLETADA");

                    b.Property<TimeSpan>("HoraCita")
                        .HasColumnType("INTERVAL DAY(8) TO SECOND(7)")
                        .HasColumnName("HORA_CITA");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(1)
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("NumeroCita")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("NUMERO_CITA");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("OBSERVACIONES");

                    b.Property<string>("ObservacionesTecnico")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("OBSERVACIONES_TECNICO");

                    b.Property<int>("SedeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SEDE_ID");

                    b.Property<string>("TecnicoAsignado")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("TECNICO_ASIGNADO");

                    b.Property<int>("TipoCitaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TIPO_CITA_ID");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("Estado")
                        .HasDatabaseName("IX_CITAS_ESTADO");

                    b.HasIndex("FechaCita")
                        .HasDatabaseName("IX_CITAS_FECHA_CITA");

                    b.HasIndex("NumeroCita")
                        .IsUnique()
                        .HasDatabaseName("IX_CITAS_NUMERO_CITA");

                    b.HasIndex("SedeId");

                    b.HasIndex("TipoCitaId");

                    b.HasIndex("ClienteId", "FechaCita")
                        .HasDatabaseName("IX_CITAS_CLIENTE_FECHA");

                    b.ToTable("CITAS", (string)null);
                });

            modelBuilder.Entity("Entity.Model.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("CELULAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)")
                        .HasColumnName("DIRECCION");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(1)
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("NOMBRE_COMPLETO");

                    b.Property<string>("NumeroCliente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("NUMERO_CLIENTE");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("NUMERO_DOCUMENTO");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONO");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("TIPO_DOCUMENTO");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_CLIENTES_EMAIL");

                    b.HasIndex("NumeroCliente")
                        .IsUnique()
                        .HasDatabaseName("IX_CLIENTES_NUMERO_CLIENTE");

                    b.HasIndex("NumeroDocumento")
                        .IsUnique()
                        .HasDatabaseName("IX_CLIENTES_NUMERO_DOCUMENTO");

                    b.ToTable("CLIENTES", (string)null);
                });

            modelBuilder.Entity("Entity.Model.HoraDisponible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("INTERVAL DAY(8) TO SECOND(7)")
                        .HasColumnName("HORA");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(1)
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int>("SedeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SEDE_ID");

                    b.Property<int?>("TipoCitaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TIPO_CITA_ID");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("TipoCitaId");

                    b.HasIndex("SedeId", "Hora")
                        .HasDatabaseName("IX_HORASDISPONIBLES_SEDE_HORA");

                    b.ToTable("HORAS_DISPONIBLES", (string)null);
                });

            modelBuilder.Entity("Entity.Model.Sede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CIUDAD");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("DEPARTAMENTO");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)")
                        .HasColumnName("DIRECCION");

                    b.Property<int>("EsPrincipal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(0)
                        .HasColumnName("ES_PRINCIPAL");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(1)
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONO");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasDatabaseName("IX_SEDES_CODIGO");

                    b.ToTable("SEDES", (string)null);
                });

            modelBuilder.Entity("Entity.Model.TipoCita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<string>("Icono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ICONO");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(1)
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOMBRE");

                    b.Property<int>("RequiereDocumentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(1)
                        .HasColumnName("REQUIERE_DOCUMENTACION");

                    b.Property<int>("TiempoEstimadoMinutos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(120)
                        .HasColumnName("TIEMPO_ESTIMADO_MINUTOS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("TIPOS_CITA", (string)null);
                });

            modelBuilder.Entity("Entity.Model.Cita", b =>
                {
                    b.HasOne("Entity.Model.Cliente", "Cliente")
                        .WithMany("Citas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CITAS_CLIENTES");

                    b.HasOne("Entity.Model.Sede", "Sede")
                        .WithMany("Citas")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CITAS_SEDES");

                    b.HasOne("Entity.Model.TipoCita", "TipoCita")
                        .WithMany("Citas")
                        .HasForeignKey("TipoCitaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CITAS_TIPOS_CITA");

                    b.Navigation("Cliente");

                    b.Navigation("Sede");

                    b.Navigation("TipoCita");
                });

            modelBuilder.Entity("Entity.Model.HoraDisponible", b =>
                {
                    b.HasOne("Entity.Model.Sede", "Sede")
                        .WithMany()
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HORASDISPONIBLES_SEDE");

                    b.HasOne("Entity.Model.TipoCita", "TipoCita")
                        .WithMany()
                        .HasForeignKey("TipoCitaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_HORASDISPONIBLES_TIPOCITA");

                    b.Navigation("Sede");

                    b.Navigation("TipoCita");
                });

            modelBuilder.Entity("Entity.Model.Cliente", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Entity.Model.Sede", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Entity.Model.TipoCita", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
